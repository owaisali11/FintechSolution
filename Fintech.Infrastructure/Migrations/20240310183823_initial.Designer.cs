// <auto-generated />
using System;
using Fintech.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fintech.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240310183823_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fintech.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Code", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeId"));

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.HasKey("CodeId");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Dashboard", b =>
                {
                    b.Property<int>("DashboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DashboardId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eframe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DashboardId");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Demographics", b =>
                {
                    b.Property<int>("DemographicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemographicId"));

                    b.Property<float>("Area")
                        .HasColumnType("real");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<float>("HousingUnits")
                        .HasColumnType("real");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<string>("Population")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DemographicId");

                    b.HasIndex("CodeId");

                    b.ToTable("Demographics");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Durables", b =>
                {
                    b.Property<int>("DurableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurableId"));

                    b.Property<bool>("Ac")
                        .HasColumnType("bit");

                    b.Property<bool>("Car")
                        .HasColumnType("bit");

                    b.Property<int?>("CodeId")
                        .HasColumnType("int");

                    b.Property<int>("CoderId")
                        .HasColumnType("int");

                    b.Property<bool>("Cooler")
                        .HasColumnType("bit");

                    b.Property<bool>("Fridge")
                        .HasColumnType("bit");

                    b.Property<bool>("Internet")
                        .HasColumnType("bit");

                    b.Property<bool>("Laptop")
                        .HasColumnType("bit");

                    b.Property<bool>("Mobile")
                        .HasColumnType("bit");

                    b.Property<bool>("Tractor")
                        .HasColumnType("bit");

                    b.HasKey("DurableId");

                    b.HasIndex("CodeId");

                    b.ToTable("Durables");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Fact", b =>
                {
                    b.Property<int>("FactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactId");

                    b.ToTable("Facts");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Faq", b =>
                {
                    b.Property<int>("FaqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaqId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaqId");

                    b.ToTable("Faqs");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Finance", b =>
                {
                    b.Property<int>("FinanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinanceId"));

                    b.Property<string>("Asset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<string>("Income")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FinanceId");

                    b.HasIndex("CodeId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Header", b =>
                {
                    b.Property<int>("HeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeaderId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Page")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeaderId");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("Fintech.Domain.Models.HhCharacterstics", b =>
                {
                    b.Property<int>("hhCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hhCode"));

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<string>("College")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Earners")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Extended")
                        .HasColumnType("int");

                    b.Property<string>("FemaleEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Individual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Joint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaleEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nuclear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_18_60")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_1_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_60")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_6_17")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hhCode");

                    b.HasIndex("CodeId");

                    b.ToTable("HhCharacterstics");
                });

            modelBuilder.Entity("Fintech.Domain.Models.HhFacility", b =>
                {
                    b.Property<int>("hhCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hhCode"));

                    b.Property<bool>("BrickWall")
                        .HasColumnType("bit");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<bool>("Electricity")
                        .HasColumnType("bit");

                    b.Property<bool>("FlushToilet")
                        .HasColumnType("bit");

                    b.Property<bool>("Gas")
                        .HasColumnType("bit");

                    b.Property<bool>("RccRoof")
                        .HasColumnType("bit");

                    b.Property<bool>("TapWater")
                        .HasColumnType("bit");

                    b.HasKey("hhCode");

                    b.HasIndex("CodeId");

                    b.ToTable("HhFacilities");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Fintech.Domain.Models.SES", b =>
                {
                    b.Property<int>("SESId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SESId"));

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SESId");

                    b.ToTable("SESs");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Fintech.Domain.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Weight", b =>
                {
                    b.Property<int>("Psu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Psu"));

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Psu");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Demographics", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Code", "code")
                        .WithMany("Demographics")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("code");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Durables", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Code", "code")
                        .WithMany("Durables")
                        .HasForeignKey("CodeId");

                    b.Navigation("code");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Finance", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Code", "code")
                        .WithMany("finances")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("code");
                });

            modelBuilder.Entity("Fintech.Domain.Models.HhCharacterstics", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Code", "code")
                        .WithMany("Characteristics")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("code");
                });

            modelBuilder.Entity("Fintech.Domain.Models.HhFacility", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Code", "code")
                        .WithMany("HhFacility")
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("code");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Tag", b =>
                {
                    b.HasOne("Fintech.Domain.Models.Article", "Article")
                        .WithMany("Tags")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Article", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Fintech.Domain.Models.Code", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Demographics");

                    b.Navigation("Durables");

                    b.Navigation("HhFacility");

                    b.Navigation("finances");
                });
#pragma warning restore 612, 618
        }
    }
}
